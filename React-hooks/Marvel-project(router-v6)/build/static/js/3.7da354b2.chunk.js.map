{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgStyle","_jsxs","className","children","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","console","log","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","this","setState","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.7da354b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=57ca0799425535626fd78601dd635f07\";\r\n  const _baseOffset = 210;\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n    clearError,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getAllCharacters } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  console.log(\"charList\");\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n    // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n    // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n    // в отдельный компонент. Но кода будет больше, появится новое состояние\n    // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n    // По возможности, не злоупотребляйте рефами, только в крайних случаях\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          tabIndex={0}\n          ref={(el) => (itemRefs.current[i] = el)}\n          key={item.id}\n          onClick={() => {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport \"./charInfo.scss\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (props.charId !== prevProps.charId) {\n  //     updateChar();\n  //   }\n  // }\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) return;\n    clearError();\n\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is ni comics with this character\"}\n        {comics.map((item, i) => {\n          if (i > 9) {\n            return;\n          }\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error) { // обновляет state\r\n    //     return {error: true}\r\n    // }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}